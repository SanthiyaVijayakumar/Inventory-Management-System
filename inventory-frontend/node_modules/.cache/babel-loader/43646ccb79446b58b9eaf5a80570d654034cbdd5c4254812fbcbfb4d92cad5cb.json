{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\santhiya\\\\OneDrive\\\\Desktop\\\\inventory\\\\inventory\\\\santhiya-project\\\\inventory-frontend\\\\src\\\\components\\\\Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { Package, MapPin, RefreshCcw, Boxes } from \"lucide-react\";\nimport \"./Dashboard.css\"; // External CSS only\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [products, setProducts] = useState([]);\n  const [locations, setLocations] = useState([]);\n  const [movements, setMovements] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const BASE_URL = \"http://127.0.0.1:5000\";\n\n  // ✅ Function to calculate total stock (based on direction)\n  const calculateTotalStock = movements => {\n    let total = 0;\n    movements.forEach(move => {\n      const qty = Number(move.qty) || 0;\n\n      // If it's incoming (no from_location)\n      if (!move.from_location) total += qty;\n\n      // If it's outgoing (no to_location)\n      if (!move.to_location) total -= qty;\n    });\n    return total;\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [prodRes, locRes, moveRes] = await Promise.all([axios.get(`${BASE_URL}/products/`), axios.get(`${BASE_URL}/locations/`), axios.get(`${BASE_URL}/product-movements/`)]);\n        setProducts(prodRes.data || []);\n        setLocations(locRes.data || []);\n        setMovements(moveRes.data || []);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-text\",\n      children: \"Loading dashboard...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 12\n    }, this);\n  }\n\n  // ✅ Use the helper function to compute total stock\n  const totalStock = calculateTotalStock(movements);\n  const summaryCards = [{\n    title: \"Total Products\",\n    value: products.length,\n    icon: /*#__PURE__*/_jsxDEV(Package, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 62\n    }, this)\n  }, {\n    title: \"Total Locations\",\n    value: locations.length,\n    icon: /*#__PURE__*/_jsxDEV(MapPin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 64\n    }, this)\n  }, {\n    title: \"Total Movements\",\n    value: movements.length,\n    icon: /*#__PURE__*/_jsxDEV(RefreshCcw, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 64\n    }, this)\n  }, {\n    title: \"Total Stock\",\n    value: totalStock,\n    icon: /*#__PURE__*/_jsxDEV(Boxes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 54\n    }, this)\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"dashboard-title\",\n      children: \"Inventory Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cards-container\",\n      children: summaryCards.map((card, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-icon\",\n          children: card.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-title\",\n            children: card.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-value\",\n            children: card.value\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"CLlpuGLqO84mw6Iy5gJ9M/exP4U=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","Package","MapPin","RefreshCcw","Boxes","jsxDEV","_jsxDEV","Dashboard","_s","products","setProducts","locations","setLocations","movements","setMovements","loading","setLoading","BASE_URL","calculateTotalStock","total","forEach","move","qty","Number","from_location","to_location","fetchData","prodRes","locRes","moveRes","Promise","all","get","data","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","totalStock","summaryCards","title","value","length","icon","map","card","idx","_c","$RefreshReg$"],"sources":["C:/Users/santhiya/OneDrive/Desktop/inventory/inventory/santhiya-project/inventory-frontend/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Package, MapPin, RefreshCcw, Boxes } from \"lucide-react\";\r\nimport \"./Dashboard.css\"; // External CSS only\r\n\r\nconst Dashboard = () => {\r\n  const [products, setProducts] = useState([]);\r\n  const [locations, setLocations] = useState([]);\r\n  const [movements, setMovements] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const BASE_URL = \"http://127.0.0.1:5000\";\r\n\r\n  // ✅ Function to calculate total stock (based on direction)\r\n  const calculateTotalStock = (movements) => {\r\n    let total = 0;\r\n    movements.forEach((move) => {\r\n      const qty = Number(move.qty) || 0;\r\n\r\n      // If it's incoming (no from_location)\r\n      if (!move.from_location) total += qty;\r\n\r\n      // If it's outgoing (no to_location)\r\n      if (!move.to_location) total -= qty;\r\n    });\r\n    return total;\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const [prodRes, locRes, moveRes] = await Promise.all([\r\n          axios.get(`${BASE_URL}/products/`),\r\n          axios.get(`${BASE_URL}/locations/`),\r\n          axios.get(`${BASE_URL}/product-movements/`),\r\n        ]);\r\n        setProducts(prodRes.data || []);\r\n        setLocations(locRes.data || []);\r\n        setMovements(moveRes.data || []);\r\n      } catch (error) {\r\n        console.error(\"Error fetching data:\", error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (loading) {\r\n    return <p className=\"loading-text\">Loading dashboard...</p>;\r\n  }\r\n\r\n  // ✅ Use the helper function to compute total stock\r\n  const totalStock = calculateTotalStock(movements);\r\n\r\n  const summaryCards = [\r\n    { title: \"Total Products\", value: products.length, icon: <Package /> },\r\n    { title: \"Total Locations\", value: locations.length, icon: <MapPin /> },\r\n    { title: \"Total Movements\", value: movements.length, icon: <RefreshCcw /> },\r\n    { title: \"Total Stock\", value: totalStock, icon: <Boxes /> },\r\n  ];\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <h1 className=\"dashboard-title\">Inventory Dashboard</h1>\r\n\r\n      <div className=\"cards-container\">\r\n        {summaryCards.map((card, idx) => (\r\n          <div key={idx} className=\"card\">\r\n            <div className=\"card-icon\">{card.icon}</div>\r\n            <div className=\"card-content\">\r\n              <p className=\"card-title\">{card.title}</p>\r\n              <p className=\"card-value\">{card.value}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}